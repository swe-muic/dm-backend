openapi: '3.0.2'

info:
  title: Deezmos API
  description: APIs for online graphing calculator
  version: '1.0'

tags:
  - name: equations
    description: Every APIs for equations
  - name: equations-parser
    description: Every APIs for parsing equations
  - name: graphs
    description: Every APIs for graphs

paths:

  /api/viewset/equations/:
    get:
      tags:
        - equations
      summary: Fetch all equations
      description: Fetch all equations and return a JSON response with http status.
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EquationListResponse'
    post:
      tags:
        - equations
      summary: Create a new equation
      description: Create a new equation and return JSON response with http status.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Equation'
      responses:
        '201':
          description: 'CREATED'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EquationDetailResponse'
        '400':
          description: 'BAD REQUEST'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'


  /api/viewset/equations/{equation_id}:
    get:
      tags:
        - equations
      summary: Fetch an equation
      description: Fetch a single equation if the equation_id is specified; otherwise, fetch all equations.
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EquationDetailResponse'
        '404':
          description: 'NOT FOUND'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'

    put:
      tags:
        - equations
      summary: Update an existing equation
      description: Update an existing equation with the specified equation_id and return JSON response with http status.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Equation'
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EquationDetailResponse'
        '400':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '404':
          description: 'NOT FOUND'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'

    delete:
      tags:
        - equations
      summary: Delete an existing equation
      description: Delete an existing equation with the specified equation_id and return JSON response with http status.
      responses:
        '204':
          description: 'NO CONTENT'
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                  message:
                    type: string
                  data:
                    type: object
                    example: null
        '404':
          description: 'NOT FOUND'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'

  /api/viewset/graphs/:
    get:
      tags:
        - graphs
      summary: Fetch all graphs
      description: Fetch all graphs and return a JSON response with http status.
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphListResponse'
    post:
      tags:
        - graphs
      summary: Create a new graph
      description: Create a new graph and return JSON response with http status.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Graph'
      responses:
        '201':
          description: 'CREATED'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphDetailResponse'
        '400':
          description: 'BAD REQUEST'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'

  /api/viewset/graph/{graph_id}:
    get:
      tags:
        - graphs
      summary: Fetch a graph
      description: Fetch a single graph if the graph_id is specified; otherwise, fetch all graphs.
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphDetailResponse'
        '404':
          description: 'NOT FOUND'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'

    put:
      tags:
        - graphs
      summary: Update an existing graph
      description: Update an existing graph with the specified graph_id and return JSON response with http status.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Graph'
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphDetailResponse'
        '400':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '404':
          description: 'NOT FOUND'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'

    delete:
      tags:
        - graphs
      summary: Delete an existing graph
      description: Delete an existing graph with the specified graph_id and return JSON response with http status.
      responses:
        '204':
          description: 'NO CONTENT'
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                  message:
                    type: string
                  data:
                    type: object
                    example: null
        '404':
          description: 'NOT FOUND'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'

components:
  schemas:
    Equation:
      type: object
      properties:
        id:
          type: integer
        equation:
          type: string
        parsed_equation:
          type: string
        color:
          type: integer
        line_style:
          type: string
        line_width:
          type: integer
        graph:
          type: integer
    Graph:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        preview:
          type: string
        owner:
          type: integer
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
    EquationListResponse:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/Equation'
    EquationDetailResponse:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
        data:
          $ref: '#/components/schemas/Equation'
    GraphListResponse:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/Graph'
    GraphDetailResponse:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
        data:
          $ref: '#/components/schemas/Graph'
    NotFoundErrorResponse:
      type: object
      properties:
        status:
          type: integer
          example: 404
        message:
          type: string
          example: fail
        data:
          type: object
          properties:
            detail:
              type: string
              example: Not Found
    ValidationErrorResponse:
      type: object
      properties:
        status:
          type: integer
          example: 400
        message:
          type: string
          example: fail
        data:
          type: object
          properties:
            equation:
              type: array
              items:
                type: string
                example: This field may not be blank.
            parsed_equation:
              type: array
              items:
                type: string
                example: This field may not be blank.
            color:
              type: array
              items:
                type: string
                example: This field may not be blank.
            line_width:
              type: array
              items:
                type: string
                example: This field may not be blank.
            graph:
              type: array
              items:
                type: string
                example: This field may not be blank.
